<UserControl x:Class="MyKpiyapProject.UserControls.TaskControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:MyKpiyapProject.ViewModels.UserControls.Task"
             xmlns:converters="clr-namespace:MyKpiyapProject.Converters"
             xmlns:local="clr-namespace:MyKpiyapProject.UserControls"
             mc:Ignorable="d"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DesignHeight="660" d:DesignWidth="880">
    <UserControl.DataContext>
        <vm:TaskControlViewModel/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <Storyboard x:Key="FadeInStoryboard">
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="0"
                To="1"
                Duration="0:0:0.5"/>
        </Storyboard>
        <Storyboard x:Key="SlideInFromRightStoryboard">
            <ThicknessAnimation
                Storyboard.TargetProperty="Margin"
                From="500,0,0,0"
                To="0,0,0,0"
                Duration="0:0:0.4"/>
        </Storyboard>
        <Storyboard x:Key="SlideInFromBottomStoryboard">
            <ThicknessAnimation
                Storyboard.TargetProperty="Margin"
                From="0,500,0,0"
                To="0,0,0,0"
                Duration="0:0:0.3"/>
        </Storyboard>

        <converters:RoleToActiveConverter x:Key="RoleToActiveConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
    </UserControl.Resources>

    <Grid Background="#eff2f7">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Page Title-->
        <TextBlock Text="Задачи" Grid.Row="1" FontSize="32" FontWeight="SemiBold" Margin="0 20 0 0"
                   HorizontalAlignment="Left" Foreground="#121518"/>

        <!--Add Button-->
        <Button Style="{StaticResource addButtonProject}" Command="{Binding LoadAddTaskControlCommand}">
            <StackPanel Orientation="Horizontal">
                <Icon:PackIconMaterial Kind="Plus" VerticalAlignment="Center" Width="11" Height="11" Margin="0 1 8 0"/>
                <TextBlock Text="Добавить новую задачу"/>
            </StackPanel>
        </Button>

        <!--Seprator-->
        <Separator Height="1" Grid.Row="3" Background="#dae2ea" Margin="0 -1 0 10"/>

        <!--Tab Buttons-->
        <StackPanel Grid.Row="2" Orientation="Horizontal" Margin="0 10 0 0">
            <Button Content="Все" Style="{StaticResource tabButton}"
                    Command="{Binding FilterByPriorityCommand}" CommandParameter="Все"
                    Tag="{Binding SelectedPriority, Converter={StaticResource RoleToActiveConverter}, ConverterParameter=Все}"/>
            <Button Content="Высокий" Style="{StaticResource tabButton}"
                    Command="{Binding FilterByPriorityCommand}" CommandParameter="Высокий"
                    Tag="{Binding SelectedPriority, Converter={StaticResource RoleToActiveConverter}, ConverterParameter=Высокий}"/>
            <Button Content="Средний" Style="{StaticResource tabButton}"
                    Command="{Binding FilterByPriorityCommand}" CommandParameter="Средний"
                    Tag="{Binding SelectedPriority, Converter={StaticResource RoleToActiveConverter}, ConverterParameter=Средний}"/>
            <Button Content="Низкий" Style="{StaticResource tabButton}"
                    Command="{Binding FilterByPriorityCommand}" CommandParameter="Низкий"
                    Tag="{Binding SelectedPriority, Converter={StaticResource RoleToActiveConverter}, ConverterParameter=Низкий}"/>
            <Button Content="Мои задачи" Width="90" Style="{StaticResource tabButton}" Command="{Binding LoadMyTaskCommand}"/>

        </StackPanel>

        <!--Counter Title-->
        <TextBlock x:Name="CounterTextBlock" Text="{Binding TaskCountText}"
                   Grid.Row="4" FontSize="18" FontWeight="SemiBold"
                   Foreground="#121518" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Text="Filter by.." Grid.Row="4" FontSize="13" FontWeight="SemiBold" Margin="0 0 215 0"
                   Foreground="#121518" HorizontalAlignment="Right" VerticalAlignment="Center"/>

        <!--Filter TextBox-->
        <Grid Width="200" HorizontalAlignment="Right" Grid.Row="4">
            <TextBlock x:Name="placeholderText" Margin="9 0" VerticalAlignment="Center" Foreground="#b0b9c6"
                       IsHitTestVisible="False" Panel.ZIndex="1"
                       Text="Поиск по задачам.."
                       Visibility="{Binding ElementName=txtFilter, Path=Text.IsEmpty,
                          Converter={StaticResource BoolToVis}}"/>

            <TextBox x:Name="txtFilter" Style="{StaticResource textboxFilter}"
                     Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <!--Таблица задач-->
        <DataGrid BorderBrush="{x:Null}" Style="{DynamicResource DataGridStyle2}"
                  CellStyle="{DynamicResource DataGridCellStyle2}"
                  ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle2}" ItemsSource="{Binding Tasks}"
                  SelectedItem="{Binding SelectedTask, Mode=TwoWay}"
                  RowStyle="{DynamicResource DataGridRowStyle2}" LoadingRow="tasksDataGrid_LoadingRow"
                  Grid.Row="5" x:Name="tasksDataGrid"
                  AutoGenerateColumns="False">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding LoadDataTaskCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <DataGrid.Columns>
                <DataGridCheckBoxColumn CanUserResize="False" Width="Auto" ElementStyle="{StaticResource CheckBoxStyle1}">
                    <DataGridCheckBoxColumn.HeaderTemplate>
                        <DataTemplate>
                            <CheckBox Style="{StaticResource CheckBoxStyle1}"/>
                        </DataTemplate>
                    </DataGridCheckBoxColumn.HeaderTemplate>
                </DataGridCheckBoxColumn>

                <DataGridTextColumn Header="#" IsReadOnly="True" CanUserResize="False" Width="Auto" Binding="{Binding RowNumber}"/>

                <DataGridTextColumn Header="Название" IsReadOnly="True" Width="*" Binding="{Binding Title}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Проект" IsReadOnly="True" Width="*" Binding="{Binding NameProject}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Создатель" IsReadOnly="True" Width="*" Binding="{Binding CreatorName}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Исполнитель" IsReadOnly="True" Width="*" Binding="{Binding ExecutorName}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Статус" IsReadOnly="True" Width="*" Binding="{Binding Status.StatusName}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Приоритет" IsReadOnly="True" Width="*" Binding="{Binding Priority.PriorityName}">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Операции" IsReadOnly="True" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button Style="{StaticResource gridEditButton}"
                                        Command="{Binding DataContext.LoadEditTaskControlCommand,
                                                    RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}">
                                    <Icon:PackIconMaterial Kind="PencilOutline" Style="{StaticResource GridButtonIcom}"/>
                                </Button>
                                <Button Style="{StaticResource gridRemoveButton}" Margin="5 0 0 0"
                                        Command="{Binding DataContext.RemoveTaskCommand,
                                                    RelativeSource={RelativeSource AncestorType=UserControl}}"
                                        CommandParameter="{Binding}">
                                    <Icon:PackIconMaterial Kind="DeleteOutline" Style="{StaticResource GridButtonIcom}"/>
                                </Button>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Контейнер для наложения TaskInfoContainer и FormContainer -->
        <Canvas Grid.Row="0" Grid.RowSpan="7"  >
            <!-- TaskInfoContainer (на весь экран) -->
            <Grid x:Name="TaskInfoContainer"
              Canvas.Left="0" Margin="0 0 0 50"
              Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=UserControl}}"
              Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=UserControl}}"
              VerticalAlignment="Stretch"
              Visibility="{Binding SecondControl, Converter={StaticResource NullToVisibilityConverter}}">
                <ContentControl x:Name="taskInfo"
                        Content="{Binding SecondControl}"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"/>
                </Grid>

    <!-- FormContainer (справа) -->
            <Grid x:Name="FormContainer"
                  Canvas.Right="0"
                  Width="400"
                  Height="620"
                  VerticalAlignment="Stretch">
                <ContentControl x:Name="viewingTask"
                                Content="{Binding CurrentControl}"
                                Visibility="{Binding CurrentControl, Converter={StaticResource NullToVisibilityConverter}}"/>
            </Grid>
        </Canvas>
    </Grid>
</UserControl>
